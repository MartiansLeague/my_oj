Homework of Operating System

After the class of Operating System, Nobita studys Cache replacement policies.
Such as First In First Out(FIFO), Last In First Out(LIFO) and Least Recently Used(LRU) etc.
So the teacher asks Nobita to come true the LRU algorithm.

The LRU algorithm is like this:
The cache's size if K, which means contains K item space to save item, and it's empty at begin.

When CPU wants to access the memory item x,

if the item X is in the cache
	we will get a hit.
else
	we will get a not hit.

	if the cache is not full
		the memory item X will be copied to an empty item space in cache.
	else
		we will find the item Y in the cache, 
		that is least recently used,
		which means that for the last time of item Y to be used,
		is smaller than all others' last time to be used.

		then we will emplay the item space in cache who saves the item Y to X.

Input

There are lots of test case.
For each test case.
The first line is two integers N and K, indicate the number of access of memory item, and the size of cache.
The second line contains N integers, indicate the id of item that will be accessed in time order.
(1<=N<=10^5, 1<=K<=N, 1<=id<=10^9)

Output

for each test case output one line.
Contain a "01" string of length N.
for ith character of this string, 0 means a not hit, and 1 means a hit.

Sample Input

7 3
1 2 1 3 4 1 2

Sample Output

0010010
